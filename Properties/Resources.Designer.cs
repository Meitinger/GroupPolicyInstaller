//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.239
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Aufbauwerk.Tools.GroupPolicyInstaller.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Aufbauwerk.Tools.GroupPolicyInstaller.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Couldn&apos;t load setup #{0} from &apos;{1}&apos;: {2} ähnelt.
        /// </summary>
        internal static string ProgramLoadSetupFailed {
            get {
                return ResourceManager.GetString("ProgramLoadSetupFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Couldn&apos;t create or open the log file &apos;{0}&apos;: {1} ähnelt.
        /// </summary>
        internal static string ProgramOpenLogFailed {
            get {
                return ResourceManager.GetString("ProgramOpenLogFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Couldn&apos;t read the registry data from &apos;{0}&apos;. ähnelt.
        /// </summary>
        internal static string ProgramReadRegFailed {
            get {
                return ResourceManager.GetString("ProgramReadRegFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Couldn&apos;t restart the system: {0} ähnelt.
        /// </summary>
        internal static string ProgramRebootFailed {
            get {
                return ResourceManager.GetString("ProgramRebootFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;!--
        ///Copyright (C) 2010-2011, Manuel Meitinger
        ///
        ///This program is free software: you can redistribute it and/or modify
        ///it under the terms of the GNU General Public License as published by
        ///the Free Software Foundation, either version 2 of the License, or
        ///(at your option) any later version.
        ///
        ///This program is distributed in the hope that it will be useful,
        ///but WITHOUT ANY WARRANTY; without even the implied warranty of
        ///MERCHANTABILITY or FITNESS FOR A PARTICULAR PU [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string ProgramSetupSchema {
            get {
                return ResourceManager.GetString("ProgramSetupSchema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}
        ///Additional information: {1} ähnelt.
        /// </summary>
        internal static string TaskDetailedResult {
            get {
                return ResourceManager.GetString("TaskDetailedResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to execute task {0}: {1} ähnelt.
        /// </summary>
        internal static string TaskLaunchFailed {
            get {
                return ResourceManager.GetString("TaskLaunchFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Couldn&apos;t load image for task {0} from &apos;{1}&apos;: {2} ähnelt.
        /// </summary>
        internal static string TaskLoadImageFailed {
            get {
                return ResourceManager.GetString("TaskLoadImageFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: {1} ähnelt.
        /// </summary>
        internal static string TaskMessage {
            get {
                return ResourceManager.GetString("TaskMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The task {0} finished successfully and requires a restart. ähnelt.
        /// </summary>
        internal static string TaskRebootRequired {
            get {
                return ResourceManager.GetString("TaskRebootRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The task {0} failed. ähnelt.
        /// </summary>
        internal static string TaskSetupFailed {
            get {
                return ResourceManager.GetString("TaskSetupFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Setup type &apos;{0}&apos; is unknown. ähnelt.
        /// </summary>
        internal static string TaskSetupTypeUnknown {
            get {
                return ResourceManager.GetString("TaskSetupTypeUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The task {0} finished successfully. ähnelt.
        /// </summary>
        internal static string TaskSucceeded {
            get {
                return ResourceManager.GetString("TaskSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The update is already installed on the system. ähnelt.
        /// </summary>
        internal static string TaskUpdateAlreadyInstalled {
            get {
                return ResourceManager.GetString("TaskUpdateAlreadyInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The update is not applicable. ähnelt.
        /// </summary>
        internal static string TaskUpdateNotApplicable {
            get {
                return ResourceManager.GetString("TaskUpdateNotApplicable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The update is not installed on the system. ähnelt.
        /// </summary>
        internal static string TaskUpdateNotInstalled {
            get {
                return ResourceManager.GetString("TaskUpdateNotInstalled", resourceCulture);
            }
        }
    }
}
